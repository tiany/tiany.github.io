<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>逸空</title>
  <subtitle>天逸的技术随笔</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://t.tiany.me/"/>
  <updated>2016-05-16T14:13:24.461Z</updated>
  <id>http://t.tiany.me/</id>
  
  <author>
    <name>Tiany Wang</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>响应式布局</title>
    <link href="http://t.tiany.me/2016/05/15/rwd/"/>
    <id>http://t.tiany.me/2016/05/15/rwd/</id>
    <published>2016-05-15T15:42:00.000Z</published>
    <updated>2016-05-16T14:13:24.461Z</updated>
    
    <content type="html">&lt;p&gt;最近看了一些RWD的东西，本月就偷个懒，用这篇整理的RWD的东西来发一篇blog吧，总算不用等到月末再发了, 由于内容主要是看到的一些东西一些摘要，所以上下文并不是很丰富，权做纪念吧。:-)&lt;/p&gt;
&lt;p&gt;响应式布局是为了让一套布局方案能够适应多种多样的显示需求而出现的，解决了传统方案下需要针对不同的设备而专门撰写不同的站点的问题。&lt;/p&gt;
&lt;p&gt;流式布局的关键技术主要有以下几点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;viewport&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;meta&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;name&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;viewport&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;content&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;width=device-width, initial-scale=1&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;上面的&lt;code&gt;width=device-width&lt;/code&gt;可以让页面宽度随着设备而改变，这样才可以进行依据宽度的布局，&lt;code&gt;initial-scale=1&lt;/code&gt;则是为了优化用户体验，在屏幕比较小的设备上，像素密度会比普通的显示器大很多，为了显示效果，这些设备一般会把字体等缩放到一个设备无关的大小(device-independent pixels)，设置这个参数可以让css文件中的px和device-independent pixels对应上。&lt;/p&gt;
&lt;p&gt;基本上主流的浏览器都支持，对于IE &amp;lt; IE9的可是使用如下的js来解决:&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!--[&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; lt IE &lt;span class=&quot;number&quot;&gt;9&lt;/span&gt;]&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;xml&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;src&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;http://css3-mediaqueries-js.googlecode.com/svn/trunk/css3-mediaqueries.js&quot;&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;span class=&quot;undefined&quot;&gt;&lt;/span&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;/&lt;span class=&quot;name&quot;&gt;script&lt;/span&gt;&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;![endif]--&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;fluid layout&lt;br&gt;流式布局主要基于css的float属性来实现，主要的设计形式如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Mostly fluid&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/4d1782b1gw1f3g2w0qdbej20dw0a3wem.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/patterns/mostly-fluid?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Column drop&lt;br&gt;&lt;img src=&quot;http://ww3.sinaimg.cn/large/4d1782b1gw1f3g2ytwrqsj20dw0a374f.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/patterns/column-drop?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Layout shifter&lt;br&gt;&lt;img src=&quot;http://ww4.sinaimg.cn/large/4d1782b1gw1f3g31mblxij20dw06tdfx.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/patterns/layout-shifter?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Tiny tweaks&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/4d1782b1gw1f3g3738whdj20dw03ut8o.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;这个里面主要是对字体等等做一些微调，布局上没有大的变化。&lt;br&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/patterns/tiny-tweaks?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;Off canvas&lt;br&gt;&lt;img src=&quot;http://ww2.sinaimg.cn/large/4d1782b1gw1f3g392bhwmj20dw081wem.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;a href=&quot;https://developers.google.com/web/fundamentals/design-and-ui/responsive/patterns/off-canvas?hl=en&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;示例代码&lt;/a&gt; &lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;media-query&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;css3引入的新心功能，可以根据屏幕的宽度加载不同的css文件&lt;/p&gt;
&lt;figure class=&quot;highlight html&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 400px 宽度下加载此css --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;span class=&quot;attr&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;screen and (max-device-width: 400px)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;tinyScreen.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;&amp;lt;!-- 400-600px 加载此css --&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;tag&quot;&gt;&amp;lt;&lt;span class=&quot;name&quot;&gt;link&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;rel&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;stylesheet&quot;&lt;/span&gt; &lt;span class=&quot;attr&quot;&gt;type&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;text/css&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;span class=&quot;attr&quot;&gt;media&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;screen and (min-width: 400px) and (max-device-width: 600px)&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;　　&lt;span class=&quot;attr&quot;&gt;href&lt;/span&gt;=&lt;span class=&quot;string&quot;&gt;&quot;smallScreen.css&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;OR&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* css中引入其他的css文件 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; url(&lt;span class=&quot;string&quot;&gt;&quot;tinyScreen.css&quot;&lt;/span&gt;) screen and (max-device-width: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;@media&lt;/p&gt;
&lt;p&gt;也可以在css中直接使用@media规则&lt;/p&gt;
&lt;figure class=&quot;highlight css&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/* 如下指定了一组在屏幕宽度小于400时的队则 */&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@&lt;span class=&quot;keyword&quot;&gt;media&lt;/span&gt; screen and (max-device-width: &lt;span class=&quot;number&quot;&gt;400px&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    　　　　&lt;span class=&quot;selector-class&quot;&gt;.column&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    　　　　　　&lt;span class=&quot;attribute&quot;&gt;float&lt;/span&gt;: none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    　　　　　　&lt;span class=&quot;attribute&quot;&gt;width&lt;/span&gt;:auto;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    　　　　&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    　　　　&lt;span class=&quot;selector-id&quot;&gt;#sidebar&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    　　　　　　&lt;span class=&quot;attribute&quot;&gt;display&lt;/span&gt;:none;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    　　　　&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    　　&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;ul&gt;
&lt;li&gt;misc：&lt;ul&gt;
&lt;li&gt;使用相对宽度&lt;/li&gt;
&lt;li&gt;使用相对大小字体，em，rem，etc.&lt;/li&gt;
&lt;li&gt;mobile first，优先设置移动页面，再一步步扩展为桌面版本，这个可以让你的布局更加灵活，而反过来的时候很多更改都会变得很麻烦。&lt;/li&gt;
&lt;/ul&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;最后，css控制前端的布局确实是很辛苦的一件事情，不过做了一段时间之后就会稍微有点感觉了，另外，&lt;a href=&quot;http://flexboxin5.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;flex-box&lt;/a&gt;是个很好的东西，解决了很多css布局的问题，强烈推荐了解，上面的示例代码里面，很多也都用到了。最近还在看一本响应式布局的书，后面如果有新的收获，应该还会再更新的。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;最近看了一些RWD的东西，本月就偷个懒，用这篇整理的RWD的东西来发一篇blog吧，总算不用等到月末再发了, 由于内容主要是看到的一些东西一些摘要，所以上下文并不是很丰富，权做纪念吧。:-)&lt;/p&gt;
&lt;p&gt;响应式布局是为了让一套布局方案能够适应多种多样的显示需求而出现的，解
    
    </summary>
    
      <category term="tech" scheme="http://t.tiany.me/categories/tech/"/>
    
    
      <category term="frontend" scheme="http://t.tiany.me/tags/frontend/"/>
    
      <category term="rwd" scheme="http://t.tiany.me/tags/rwd/"/>
    
  </entry>
  
  <entry>
    <title>Django中的静态文件处理</title>
    <link href="http://t.tiany.me/2016/04/30/django-static-files/"/>
    <id>http://t.tiany.me/2016/04/30/django-static-files/</id>
    <published>2016-04-30T12:24:00.000Z</published>
    <updated>2016-05-16T13:53:12.384Z</updated>
    
    <content type="html">&lt;p&gt;刚开始使用Django的时候，为了弄清楚其中关于静态文件处理的相关知识，走了不少的弯路，文档也看了好几遍，所以打算在这儿简单记录一下，防止自己将来忘记，也希望可以帮到别人。&lt;/p&gt;
&lt;p&gt;我们将利用django的开发分为三个阶段，在不太的阶段，django对静态文件的处理是不太一样的：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;初始开发阶段&lt;br&gt;&amp;emsp;&amp;emsp;在这个阶段，我们基本上就是直接使用django进行开发，要查看结果的时候也就是通过&lt;code&gt;python manage.py runserver&lt;/code&gt;来直接查看的，如果你所有的静态资源文件都是放在自己的各个应用下面的，那么没有问题(注意需要将你的app增加到&lt;code&gt;INSTALLED_APPS&lt;/code&gt;里），但是如果你有公共的静态资源，放在其他目录下的，就需要关注一个settings.py中可以指定的参数&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;,在它里面增加自己的自定义文件夹，这样跑起来的时候系统就会去找了。比如我们在工程的根目录有一个static目录里面放了大家共用的静态资源文件，我们就可以这样定义&lt;code&gt;STATICFILES_DIRS&lt;/code&gt;：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;STATICFILES_DIRS = (&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    os.path.join(BASE_DIR, &lt;span class=&quot;string&quot;&gt;&quot;static&quot;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;搭配uwsgi，nginx的调试阶段&lt;br&gt; &amp;emsp;&amp;emsp;这一步我们假设已经部署好了uwsgi，nginx，但是暂时还不想完全把静态文件提出来让nginx管理。由于这一步的时候我们的python环境已经是由uwsgi提供的了，而不是&lt;code&gt;python manage.py runserver&lt;/code&gt;,所以我们需要在&lt;code&gt;urls.py&lt;/code&gt;中增加如下配置，来保证django会帮我们渲染静态文件&lt;/p&gt;
 &lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.contrib.staticfiles.urls &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; staticfiles_urlpatterns&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# ... the rest of your URLconf here ...&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;urlpatterns += staticfiles_urlpatterns()&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt; &amp;emsp;&amp;emsp;值得注意的是，这个方法渲染效率其实是很低的，而且是不安全的，所以请务必之在调试环境下使用，第一步里面的&lt;code&gt;python manage.py runserver&lt;/code&gt;其实也是用了这个方法，而且此方法也旨在&lt;code&gt;DEBUG=True&lt;/code&gt;的时候才生效。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;搭配uwsgi，nginx的生产阶段&lt;br&gt; &amp;emsp;&amp;emsp;在生产阶段，需要保证静态文件的渲染足够快，所以一定不会用上面的方法了，这个时候我们需要把专业的事情交给专业的人来做，也就是把他们都交给nginx和apache这样的web_server来做。&lt;br&gt; &amp;emsp;&amp;emsp;在交给这样的nginx，apache这样的web_server之前，我们需要把自己所有的静态文件都集中到一个地方，这样才能方便nginx，apache这些服务来处理，需要使用django提供的&lt;code&gt;python manage.py collectstatic&lt;/code&gt;命令，在使用这个命令之前需要在settings.py中指定MEDIA_ROOT的值，也就是最终把所有的静态文件收集到什么目录，然后在nginx中，再将静态url都指定到这个目录就好了。&lt;br&gt; &amp;emsp;&amp;emsp;考虑到网站加速，我们有时候会使用oss或者cdn之类的服务，在使用这些服务的时候我们需要将上一步中我们通过collectstatic收集起来的文件上传到oss或者cdn上面，然后在&lt;code&gt;settings.py&lt;/code&gt;中指定&lt;code&gt;STATIC_URL&lt;/code&gt;为指定的访问前缀即可。&lt;br&gt; &amp;emsp;&amp;emsp;另外，推荐下ManifestStaticFilesStorage，这个Storage在collectstatic的时候会将所有的文件都算一个hash作为文件后缀，这样再上传到cdn，oss上面的时候就可以设置缓存的时间为永久了，因为一旦更新的话，对应的hash就会发生变化了。详细的情况看&lt;a href=&quot;https://docs.djangoproject.com/en/1.9/ref/contrib/staticfiles/#manifeststaticfilesstorage&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;另外本文没有提到的一点，就是在template的html里面引用static文件的时候一定要使用&lt;br&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;% load static &lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; staticfiles %&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;img src=&lt;span class=&quot;string&quot;&gt;&quot;&amp;#123;% static &quot;&lt;/span&gt;images/hi.jpg&lt;span class=&quot;string&quot;&gt;&quot; %&amp;#125;&quot;&lt;/span&gt; alt=&lt;span class=&quot;string&quot;&gt;&quot;Hi!&quot;&lt;/span&gt; /&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;这样的形式，才能保证你的项目尽可能灵活。 但是这个会造成前端无法单独开发，建议构建一个虚拟环境，会接受templates的文件名，然后渲染对应的template，然后经template和static目录共享给前端的开发人员，这样他们就可以比较容易地开发了。&lt;/p&gt;
&lt;p&gt;&lt;em&gt;这个月又是在最后的时间赶文涨，说不仓促是骗人的，下个月一定要努力，希望不用这样赶文章了。&lt;/em&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;刚开始使用Django的时候，为了弄清楚其中关于静态文件处理的相关知识，走了不少的弯路，文档也看了好几遍，所以打算在这儿简单记录一下，防止自己将来忘记，也希望可以帮到别人。&lt;/p&gt;
&lt;p&gt;我们将利用django的开发分为三个阶段，在不太的阶段，django对静态文件的处理是
    
    </summary>
    
      <category term="tech" scheme="http://t.tiany.me/categories/tech/"/>
    
    
      <category term="Django" scheme="http://t.tiany.me/tags/Django/"/>
    
      <category term="static_files" scheme="http://t.tiany.me/tags/static-files/"/>
    
  </entry>
  
  <entry>
    <title>django中many-to-many数据库关系的migrate操作</title>
    <link href="http://t.tiany.me/2016/03/29/django-many-to-many-migrate/"/>
    <id>http://t.tiany.me/2016/03/29/django-many-to-many-migrate/</id>
    <published>2016-03-28T17:49:38.000Z</published>
    <updated>2016-05-16T13:52:52.854Z</updated>
    
    <content type="html">&lt;p&gt;公司的项目是用Django作为基础架构搭建的，在设计数据库的时候由于我当时对Django的一些细节还不是很清楚，导致在设计一组多对多的关系的时候直接使用了系统自带的many_to_many关系，之后随着需求的增加和代码的进一步开发，发现在这个多对多的关系上需要增加附属信息，而直接使用系统自带的many_to_many是无法完成这一需求的。&lt;/p&gt;
&lt;p&gt;举个例子来说就是这样的：&lt;br&gt;假设我们现在有两份数据，分别是 &lt;strong&gt;乐队&lt;/strong&gt; 和 &lt;strong&gt;歌手&lt;/strong&gt;，显然乐队和歌手之间应该是一个多对多的关系（一个乐队有多个歌手是显而易见的，而随着时间的推演，一个歌手曾经隶属于多个乐队也是很正常的事情），当我们使用默认的django的多对多关系的时候，我们是可以很容易地表述这一信息的。&lt;/p&gt;
&lt;p&gt;之后随着需求的发展，问题变成了这个样子，我们现在还需要记录每个歌手 &lt;strong&gt;加入乐队的时间&lt;/strong&gt; 和 &lt;strong&gt;从乐队离队的时间&lt;/strong&gt;。首先从直觉上我们会意识到这个其实是对乐队和歌手关系的一个补充描述，所以最合理的添加地方就是在描述乐队和乐手关系的表里面。在这儿我们需要插播一下数据库中是如何实现多对多关系的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;对于最简单的一对一关系，只需要在一对一关系的任意一方的表里面添加一列，内容为另外一方的ID即可实现。&lt;/li&gt;
&lt;li&gt;对于一对多的关系，我们只需要在多的一方的表里面添加一列，内容以一的一方的ID也就可以实现了。&lt;/li&gt;
&lt;li&gt;对于多对多的关系，如果我们还是使用上面的两个方法的话，由于我们不知道另外一端到底会有多少个，这样就无法简单通过扩展表的形式来实现了，而且就算实现了，在数据上也是很大的冗余。所以在面对多对多的关系的时候，数据库采用的方法是在新建一张表，这张表里面有两列，分别指向多对对关系里面的双方，这样问题就解决了。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;知道了多对多关系是怎么实现的，然后就是迁移的事情了，django其实是提供了自动以这张表的能力的，只需要在创建多对多关系的时候指定它们的through就好了，这样后续也可以继续扩展这张表提供更多的附加数据，但是默认的情况下直接建立了一张表，这张表里面只有两列，就是多对多关系的双方。&lt;/p&gt;
&lt;p&gt;如果我们直接新建through（其实就是django里面的一个model class），并修改多对多关系的话，直接使用系统的makemigtations，migrate我们将会得到一个异常 (Django migration error :you cannot alter to or from M2M fields, or add or remove through= on M2M fields)，所以这样是行不通的。&lt;/p&gt;
&lt;p&gt;这个问题如鲠在喉了好久，Google上搜到的一些答案也不尽如人意，不过参考那些答案，最终还是把这个问题解决了，基本思路如下：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;保留原有的many_to_many field，并新建一个many_to_many field，新建的many_to_many field里面指定自定义的through。&lt;/li&gt;
&lt;li&gt;执行migrate，使得新建的many_to_many field生效。&lt;/li&gt;
&lt;li&gt;执行data-migration，把旧的many_to_many field的数据迁移过来。（这一步可以直接通过写临时脚本来实现，但是由于要考虑migration操作的完整性和独立性，所以其实是整个思路里面花时间最长的地方。）&lt;/li&gt;
&lt;li&gt;删除旧的many_to_many field，并修正新field里面的相关命名。&lt;/li&gt;
&lt;li&gt;排查代码，修改用于增加多对多关系的代码。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;代码示例如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;在执行步骤1之前，我们有两个对象Publication2和Article2，它们之间是多对多的关系，并且是直接使用django默认的many_to_many来处理的，代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#models.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Publication2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;# __unicode__ on Python 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Article2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headline = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    publications = models.ManyToManyField(Publication2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;# __unicode__ on Python 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.headline&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;然后修改models.py文件到下面这样，我们增加了publications_m用来做中间的中转field，注意这里添加related_name是为了和上面的publications区分，否则的话从Publication2找Article2的时候就无法区分是publications关系的还是publications_m关系的了，django也会报错。&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Publication2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;# __unicode__ on Python 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Meta&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ordering = (&lt;span class=&quot;string&quot;&gt;&#39;title&#39;&lt;/span&gt;,)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Article2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headline = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    publications = models.ManyToManyField(Publication2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    publications_m = models.ManyToManyField(Publication2, related_name=&lt;span class=&quot;string&quot;&gt;&quot;ariticle2_m&quot;&lt;/span&gt;, through=&lt;span class=&quot;string&quot;&gt;&#39;WriteRelation2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;# __unicode__ on Python 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.headline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WriteRelation2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    publication2 = models.ForeignKey(Publication2, on_delete=models.CASCADE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    article2 = models.ForeignKey(Article2, on_delete=models.CASCADE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    write_date = models.DateTimeField(auto_now_add=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;执行  &lt;code&gt;./manage.py makemigrations m2m3&lt;/code&gt; 和 &lt;code&gt;./manage.py migrate&lt;/code&gt;, 其中m2m3是我为这个工程取的名字（第三个m2m测试），执行后上面models.py中的修改就会生效了，生成的migrate file内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 0002_****.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; migrations, models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(migrations.Migration)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dependencies = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;m2m3&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;0001_initial&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    operations = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        migrations.CreateModel(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name=&lt;span class=&quot;string&quot;&gt;&#39;WriteRelation2&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            fields=[&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;string&quot;&gt;&#39;id&#39;&lt;/span&gt;, models.AutoField(serialize=&lt;span class=&quot;keyword&quot;&gt;False&lt;/span&gt;, primary_key=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;, verbose_name=&lt;span class=&quot;string&quot;&gt;&#39;ID&#39;&lt;/span&gt;, auto_created=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;string&quot;&gt;&#39;write_date&#39;&lt;/span&gt;, models.DateTimeField(auto_now_add=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;string&quot;&gt;&#39;article2&#39;&lt;/span&gt;, models.ForeignKey(to=&lt;span class=&quot;string&quot;&gt;&#39;m2m3.Article2&#39;&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                (&lt;span class=&quot;string&quot;&gt;&#39;publication2&#39;&lt;/span&gt;, models.ForeignKey(to=&lt;span class=&quot;string&quot;&gt;&#39;m2m3.Publication2&#39;&lt;/span&gt;)),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        migrations.AddField(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            model_name=&lt;span class=&quot;string&quot;&gt;&#39;article2&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name=&lt;span class=&quot;string&quot;&gt;&#39;publications_m&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            field=models.ManyToManyField(related_name=&lt;span class=&quot;string&quot;&gt;&#39;ariticle2_m&#39;&lt;/span&gt;, to=&lt;span class=&quot;string&quot;&gt;&#39;m2m3.Publication2&#39;&lt;/span&gt;, through=&lt;span class=&quot;string&quot;&gt;&#39;m2m3.WriteRelation2&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;也是最关键的一步，执行data migration，具体步骤先执行 &lt;code&gt;./manage.py makemigrations --empty m2m3&lt;/code&gt;这一步会生成一个空的migrate file用于填写具体的迁移脚本，填写后再执行&lt;code&gt;./manage.py migrate&lt;/code&gt;即可完成data migration，可参考django的&lt;a href=&quot;https://docs.djangoproject.com/en/1.9/topics/migrations/#data-migrations&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;。我写的data migration的脚本如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# 0003_****.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; migrations, models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;forwards_func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(apps, schema_editor)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Article2 = apps.get_model(&lt;span class=&quot;string&quot;&gt;&quot;m2m3&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Article2&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WriteRelation2 = apps.get_model(&lt;span class=&quot;string&quot;&gt;&quot;m2m3&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;WriteRelation2&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; t &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; Article2.publications.through.objects.all():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        WriteRelation2.objects.create(article2=t.article2, publication2=t.publication2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;reverse_func&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(apps, schema_editor)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Article2 = apps.get_model(&lt;span class=&quot;string&quot;&gt;&quot;m2m3&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;Article2&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    WriteRelation2 = apps.get_model(&lt;span class=&quot;string&quot;&gt;&quot;m2m3&quot;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&quot;WriteRelation2&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; t &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; WriteRelation2.objects.all():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        Article2.publications.through.objects.create(article2=t.article2, publication2=t.publication2)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        t.delete()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;#WriteRelation2.objects.create(article2=t.article2, publication2=t.publication2)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(migrations.Migration)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dependencies = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;m2m3&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;0002_auto_20160311_0849&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    operations = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        migrations.RunPython(forwards_func, reverse_func),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;剩下的就是清理工作了，要分两步进行，先删除旧的many_to_many field， 将新的many_to_many field修改名称到原来的样子。完全修改好之后的models.py和对应的两个migrate file的内容如下：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;36&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;37&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;38&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;39&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;40&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;41&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;42&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;43&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;44&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;45&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;46&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;47&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;48&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;49&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;50&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;51&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;52&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;53&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;54&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;55&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;56&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;57&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;58&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;59&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;60&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;61&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;62&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;63&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;64&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;65&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;66&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;67&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;68&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#  0004_***.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; migrations, models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(migrations.Migration)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dependencies = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;m2m3&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;0003_auto_20160311_0849&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    operations = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        migrations.RemoveField(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            model_name=&lt;span class=&quot;string&quot;&gt;&#39;article2&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name=&lt;span class=&quot;string&quot;&gt;&#39;publications&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#  0005_***.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;# -*- coding: utf-8 -*-&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; __future__ &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; unicode_literals&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; migrations, models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Migration&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(migrations.Migration)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    dependencies = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        (&lt;span class=&quot;string&quot;&gt;&#39;m2m3&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;0004_remove_article2_publications&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    operations = [&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        migrations.RemoveField(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            model_name=&lt;span class=&quot;string&quot;&gt;&#39;article2&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name=&lt;span class=&quot;string&quot;&gt;&#39;publications_m&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        migrations.AddField(&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            model_name=&lt;span class=&quot;string&quot;&gt;&#39;article2&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            name=&lt;span class=&quot;string&quot;&gt;&#39;publications&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            field=models.ManyToManyField(to=&lt;span class=&quot;string&quot;&gt;&#39;m2m3.Publication2&#39;&lt;/span&gt;, through=&lt;span class=&quot;string&quot;&gt;&#39;m2m3.WriteRelation2&#39;&lt;/span&gt;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        ),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#  models.py&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;from&lt;/span&gt; django.db &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; models&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Publication2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;30&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;# __unicode__ on Python 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.title&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Article2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    headline = models.CharField(max_length=&lt;span class=&quot;number&quot;&gt;100&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    publications = models.ManyToManyField(Publication2, through=&lt;span class=&quot;string&quot;&gt;&#39;WriteRelation2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__str__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;              &lt;span class=&quot;comment&quot;&gt;# __unicode__ on Python 2&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; self.headline&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;WriteRelation2&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(models.Model)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    publication2 = models.ForeignKey(Publication2, on_delete=models.CASCADE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    article2 = models.ForeignKey(Article2, on_delete=models.CASCADE)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    write_date = models.DateTimeField(auto_now_add=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;最后就是找到代码里面类似如下的地方：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a1 = Article2.objects.create(headline=&lt;span class=&quot;string&quot;&gt;&#39;A1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p1 = Publication2.objects.create(title=&lt;span class=&quot;string&quot;&gt;&#39;p1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2 = Publication2.objects.create(title=&lt;span class=&quot;string&quot;&gt;&#39;p2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a1.publications.add(p1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;a1.publications.add(p2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;改为&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;a1 = Article2.objects.create(headline=&lt;span class=&quot;string&quot;&gt;&#39;A1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p1 = Publication2.objects.create(title=&lt;span class=&quot;string&quot;&gt;&#39;p1&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;p2 = Publication2.objects.create(title=&lt;span class=&quot;string&quot;&gt;&#39;p2&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WriteRelation2.objects.create(article2=a1, publication2=p1)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;WriteRelation2.objects.create(article2=a1, publication2=p2)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;The End.&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;公司的项目是用Django作为基础架构搭建的，在设计数据库的时候由于我当时对Django的一些细节还不是很清楚，导致在设计一组多对多的关系的时候直接使用了系统自带的many_to_many关系，之后随着需求的增加和代码的进一步开发，发现在这个多对多的关系上需要增加附属信息，
    
    </summary>
    
      <category term="tech" scheme="http://t.tiany.me/categories/tech/"/>
    
    
      <category term="Django" scheme="http://t.tiany.me/tags/Django/"/>
    
      <category term="many-to-many" scheme="http://t.tiany.me/tags/many-to-many/"/>
    
      <category term="migrate" scheme="http://t.tiany.me/tags/migrate/"/>
    
  </entry>
  
  <entry>
    <title>RESTful API 与 Tastypie</title>
    <link href="http://t.tiany.me/2016/02/29/restful-api-and-tastypie/"/>
    <id>http://t.tiany.me/2016/02/29/restful-api-and-tastypie/</id>
    <published>2016-02-28T16:08:38.000Z</published>
    <updated>2016-02-28T17:10:42.638Z</updated>
    
    <content type="html">&lt;p&gt;RESTful API是一个基于HTTP定义的通用接口，可以让后台比较容易地数据暴露给前台使用，实在是在现在这个多前台并行开发后端往往支持不力的情况下后端&lt;del&gt;偷懒的绝佳法门&lt;/del&gt;统一接口的一个非常好的方式。&lt;/p&gt;
&lt;p&gt;RESTful API在不同的语言和框架下都有这自己不同的实现，由于我开发的时候使用了Python + Django的组合，而在实现RESTful API的时候为了方便起见，我使用了自己之前稍微有过接触的Tastypie，其实在Tastypie之后出现了很多比较优秀的RESTful api方案，诸如：&lt;a href=&quot;http://www.django-rest-framework.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;django-rest-framework&lt;/a&gt; 此处不展开。&lt;/p&gt;
&lt;p&gt;所有的RESTful API由于涉及到前后端的数据交互，所以一定要指定一个数据格式，这个格式目前比较主流的就是json了，而TastyPie相对于其他的实现比较好的一点就是这个从后端数据到json的序列化过程可以自动生成，不需要自己去写。&lt;/p&gt;
&lt;p&gt;RESTful API基本可以分为以下几个部分：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;strong&gt;元&lt;/strong&gt;&lt;br&gt; 这个部分一般用于查询接口说明，可以从中获取到服务提供的具体接口和调用形式，使用HTTP的GET/OPTION方法获取。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;增&lt;/strong&gt;&lt;br&gt; 一般使用HTTP的POST方法完成，用于向数据源增加数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;删&lt;/strong&gt;&lt;br&gt; 一般使用HTTP的DELETE方法完成，用于删除已经存在的数据。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;查&lt;/strong&gt;&lt;br&gt; 一般使用HTTP的GET方法获取，用于获取数据的具体内容。&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;改&lt;/strong&gt;&lt;br&gt; 一般使用HTTP的PUT/PATCH方法完成，用于修改已经存在的数据。&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;用于前端交互一般都是通过js完成的，下面给出一段通过js访问相关接口的示例如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;POST&lt;/strong&gt;&lt;br&gt;to get the new created object resource_uri, you should specify the CORS_EXPOSE_HEADERS = (‘Location’,) in django-cors-header if this is a cors request.&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url: url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;address&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;TEST&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;name&#39;&lt;/span&gt;:&lt;span class=&quot;string&quot;&gt;&#39;TEST&#39;&lt;/span&gt;&amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  method: &lt;span class=&quot;string&quot;&gt;&#39;POST&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dataType: &lt;span class=&quot;string&quot;&gt;&#39;json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  contentType: &lt;span class=&quot;string&quot;&gt;&#39;application/json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  complete: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;xhr, textStatus&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;complete&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(textStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(xhr.status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(xhr.getResponseHeader(&lt;span class=&quot;string&quot;&gt;&#39;Location&#39;&lt;/span&gt;)); &lt;span class=&quot;comment&quot;&gt;//resource uri.&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;strong&gt;DELETE&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url: url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  method: &lt;span class=&quot;string&quot;&gt;&#39;DELETE&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dataType: &lt;span class=&quot;string&quot;&gt;&#39;json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  contentType: &lt;span class=&quot;string&quot;&gt;&#39;application/json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  complete: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;xhr, textStatus&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;complete&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(textStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(xhr.status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;GET&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url: url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  method: &lt;span class=&quot;string&quot;&gt;&#39;GET&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dataType: &lt;span class=&quot;string&quot;&gt;&#39;json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  contentType: &lt;span class=&quot;string&quot;&gt;&#39;application/json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  complete: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;xhr, textStatus&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(xhr.responseJSON));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PUT/PATCH&lt;/strong&gt;&lt;br&gt;&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;$.ajax(&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  url: url,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  method: &lt;span class=&quot;string&quot;&gt;&#39;PATCH&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  data: &lt;span class=&quot;built_in&quot;&gt;JSON&lt;/span&gt;.stringify(&amp;#123;&lt;span class=&quot;string&quot;&gt;&#39;build_count&#39;&lt;/span&gt;:&lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;&amp;#125;),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  dataType: &lt;span class=&quot;string&quot;&gt;&#39;json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  contentType: &lt;span class=&quot;string&quot;&gt;&#39;application/json&#39;&lt;/span&gt;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  complete: &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt; (&lt;span class=&quot;params&quot;&gt;xhr, textStatus&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(&lt;span class=&quot;string&quot;&gt;&quot;complete&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(textStatus);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;built_in&quot;&gt;console&lt;/span&gt;.log(xhr.status);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;);&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;&lt;/p&gt;
&lt;p&gt;使用Tastypie构建的RESTful API需要注意以下点：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Tastypie在上传文件方面目前没有比较官方的实现，目前网上给出的方案一般都是hack源码的，如果不想hack源码的话，可以考虑单独使用普通的API来实现，但是一致性会比较差，需要取舍。&lt;/li&gt;
&lt;li&gt;RESTful API如果是跨域调用的话，需要注意设置跨域请求的参数，可以考虑使用&lt;a href=&quot;https://github.com/ottoyiu/django-cors-headers&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;django-cors-headers&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;使用RESTful API请务必注意安全，由于此API将后台的数据暴露了出去，所以对于调用方身份一定要做严格的校验，避免出现安全问题。&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;关于RESTful API基本就是这些东西，详细的知识建议翻阅&lt;a href=&quot;http://www.restapitutorial.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;，Tastypie的&lt;a href=&quot;https://django-tastypie.readthedocs.org/en/latest/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官方文档&lt;/a&gt;更要好好翻，我当时因为没有好好翻文档吃了很多亏，谨记，谨记。&lt;/p&gt;
&lt;p&gt;&lt;del&gt;幸好这个月有29号，不然真的就要连续两个月断更了，打算三月份多写一篇来弥补下一月份缺的文章，暂定的两篇文章，一篇是django的简单开发总结，一篇应该会写一个游戏的求解程序，希望不会跳票。&lt;/del&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;RESTful API是一个基于HTTP定义的通用接口，可以让后台比较容易地数据暴露给前台使用，实在是在现在这个多前台并行开发后端往往支持不力的情况下后端&lt;del&gt;偷懒的绝佳法门&lt;/del&gt;统一接口的一个非常好的方式。&lt;/p&gt;
&lt;p&gt;RESTful API在不同的语言和框架
    
    </summary>
    
      <category term="tech" scheme="http://t.tiany.me/categories/tech/"/>
    
    
      <category term="RESTful-api" scheme="http://t.tiany.me/tags/RESTful-api/"/>
    
      <category term="Tastypie" scheme="http://t.tiany.me/tags/Tastypie/"/>
    
      <category term="Python" scheme="http://t.tiany.me/tags/Python/"/>
    
  </entry>
  
  <entry>
    <title>Vim踩坑一例</title>
    <link href="http://t.tiany.me/2015/12/20/vim-trap/"/>
    <id>http://t.tiany.me/2015/12/20/vim-trap/</id>
    <published>2015-12-20T15:38:41.000Z</published>
    <updated>2016-05-16T13:55:35.646Z</updated>
    
    <content type="html">&lt;p&gt;从大学开始使用Vim到现在算起来也将近10年了，10年的使用过程里面，除了初期的学习成本之外，vim基本上没有给我造成过大的麻烦，直到最近的一次。&lt;/p&gt;
&lt;p&gt;事情是这样的，前一段时间我受一些文章的影响vim下多文件的编辑从以前习惯的多tab方式切换到多buffer的模式了，此类的文章如：&lt;a href=&quot;https://joshldavis.com/2014/04/05/vim-tab-madness-buffers-vs-tabs/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Vim Tab Madness. Buffers vs Tabs&lt;/a&gt;，当然，这并没有问题，因为对多文件的编辑使用buffer的形式本身就是Vim的设定。多buffer下切换buffer(我使用了minibufferexplorer插件)的时候是需要先写出下当前buffer的(&lt;code&gt;:w&lt;/code&gt;),这点和在多tab编辑下的习惯不太一样，所以我在自己的本地环境也设置了&lt;code&gt;set hidden&lt;/code&gt;, 这样就能避免切换到新的buffer的时候就必须写出当前buffer，然而比较作死的是，我有一部分代码是直接在服务器上写的，而在服务器的vimrc中我并没有设置&lt;code&gt;set hidden&lt;/code&gt;，而且当时也并没有觉得会出什么大问题，指导有一天，我打算完成如下的一个任务：&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  从a文件中分离出来一部分代码到b文件中&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt;我当时的的操作流程如下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;新建b文件&lt;/li&gt;
&lt;li&gt;vim同时打开a，b文件，用&lt;code&gt;shift v&lt;/code&gt;选中a里需要的代码，按&lt;code&gt;d&lt;/code&gt;删除（&lt;strong&gt;这里是犯的第一个错误&lt;/strong&gt;），&lt;code&gt;:w&lt;/code&gt; 保存文件&lt;/li&gt;
&lt;li&gt;跳转到b文件，这个时候出了一个小失误，我失手按了&lt;code&gt;yy&lt;/code&gt;键，复制了某个空行（&lt;strong&gt;这里是第二个错误&lt;/strong&gt;），发现在b里面无法粘贴原来的代码&lt;/li&gt;
&lt;li&gt;退回到a文件，企图用&lt;code&gt;u&lt;/code&gt;撤销操作失败，&lt;code&gt;:undolist&lt;/code&gt;输出为空…… 这个时候我意识到了问题的存在，保留进程未动，企图恢复文件&lt;/li&gt;
&lt;li&gt;企图通过复制.swp文件恢复，复制.swp文件到其他目录，然后建立同名文件，打开，按照提示选择恢复，发现已经是&lt;code&gt;:w&lt;/code&gt;之后的文件了&lt;/li&gt;
&lt;li&gt;企图通过vim的自动备份文件来恢复，发现没有备份文件，虽然我以前很讨厌vim的备份文件，但是此刻我真的好希望有备份文件，我记得以前备份文件是需要手动关闭的，但是检查了下我的vimrc没发现关闭自动备份的地方，感觉像是某个版本后vim就默认关闭自动备份了,只打开了writebackup（&lt;strong&gt;这里是第三个错误&lt;/strong&gt;）&lt;/li&gt;
&lt;li&gt;本来想在通过文件系统试下找回的，但是想想也就几百行代码，还是直接重写吧，于是作罢。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;这个过程的三个简单总结下：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;第一个错误，此处应该用复制，待粘贴好之后再执行delete&lt;/li&gt;
&lt;li&gt;第二个错误，使用的是默认寄存器时，一定要随时小心寄存器被覆盖&lt;/li&gt;
&lt;li&gt;第三个错误，备份任何时候都不是多余的。&lt;br&gt;&lt;strong&gt;冗余不做，日子甭过，备份不做，十恶不赦&lt;/strong&gt; &amp;emsp;&amp;emsp;&amp;emsp; –摘自某Linux前辈签名&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;问题发生了，但是我坚信vim一定有版本解决这个问题的，于是开始请教了一堆人（这里感叹下，vim的freenode irc真的好冷清），并做了各种尝试，最终结论如下，与君共飨：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;首先是造成这个问题的原因&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;  When unloading a buffer Vim normally destroys the tree of undos created for that buffer.&lt;/p&gt;
&lt;/blockquote&gt;
&lt;p&gt; 以上文字来源于&lt;code&gt;:help persist-undo&lt;/code&gt;，(多谢 &lt;a href=&quot;http://lilydjwg.is-programmer.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百合喵&lt;/a&gt;), 也就是默认的buffer设置下，&lt;code&gt;:w&lt;/code&gt;然后切换到其他buffer的时候，当前buffer的&lt;code&gt;undo tree&lt;/code&gt;就会被销毁了，这也是造成这次事故的根本原因。&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;解决方案，也是最简单的，设置&lt;code&gt;set hidden&lt;/code&gt;， 这个可以保证你切换到其他buffer的时候当前的buffer只是hidden而不是unload，所以undo tree就不会被销毁了，但是使用这个选项的时候一定要特别小心地使用&lt;code&gt;:q!&lt;/code&gt; &lt;code&gt;:qall!&lt;/code&gt; 这样的命令，否则容易丢文件&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置persist-undo，详细的设置见&lt;code&gt;:help persist-undo&lt;/code&gt;, 推荐搭配 &lt;a href=&quot;https://github.com/mbbill/undotree&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;undo-tree&lt;/a&gt; 使用, 参考设置&lt;/p&gt;
&lt;figure class=&quot;highlight vim&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;nnoremap&lt;/span&gt; &lt;span class=&quot;symbol&quot;&gt;&amp;lt;F5&amp;gt;&lt;/span&gt; :UndotreeToggle&lt;span class=&quot;symbol&quot;&gt;&amp;lt;cr&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;has&lt;/span&gt;(&lt;span class=&quot;string&quot;&gt;&quot;persistent_undo&quot;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; undodir=~/.undodir/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;undofile&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;endif&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;设置backup，详细设置可以看 &lt;code&gt;:help backup&lt;/code&gt;, 参考设置：&lt;/p&gt;
 &lt;figure class=&quot;highlight gams&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; backupdir=~/.vim_backdir/&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;set&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;backup&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;如上配置之后基本上就不用担心vim丢文件了，当然，配合上好用的版本控制工具，效果就更好了。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;从大学开始使用Vim到现在算起来也将近10年了，10年的使用过程里面，除了初期的学习成本之外，vim基本上没有给我造成过大的麻烦，直到最近的一次。&lt;/p&gt;
&lt;p&gt;事情是这样的，前一段时间我受一些文章的影响vim下多文件的编辑从以前习惯的多tab方式切换到多buffer的模式
    
    </summary>
    
      <category term="tech" scheme="http://t.tiany.me/categories/tech/"/>
    
    
      <category term="vim" scheme="http://t.tiany.me/tags/vim/"/>
    
  </entry>
  
  <entry>
    <title>hexo-config</title>
    <link href="http://t.tiany.me/2015/12/08/hexo-config/"/>
    <id>http://t.tiany.me/2015/12/08/hexo-config/</id>
    <published>2015-12-08T13:34:25.000Z</published>
    <updated>2015-12-20T16:38:51.694Z</updated>
    
    <content type="html">&lt;p&gt;想写技术博客的时间其实有很久了，但是一直都没有实施起来过，怎么说呢，拖延症确实还是太严重了，希望这次会是一个好的开始，目前的计划是每月保证一更，希望能坚持下来。&lt;/p&gt;
&lt;p&gt;把技术博客从wp迁移到github pages了，一个主要的原因是我开始喜欢上Markdown这样的写作方式了，另外也是想体验下github pages的博客功能。前期在搭建的技术选型中在jekyll和hexo中犹豫了好久，不过还是更喜欢hexo这个名字， 你看，hex是16进制，hexo和hero又只有一字之差，而且读着也蛮朗朗上口的，还有一个私心，是想在用hexo的过程中了解下node.js, 这么多好处就由不得我不去选hexo了啊……&lt;/p&gt;
&lt;p&gt;选好了最基础的框架之后，就开始动手了，这方面网上有很多教程，基本上随便找找就可以搞定了，我是参考这两篇完成的：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;a href=&quot;http://wsgzao.github.io/post/hexo-guide/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;使用GitHub和Hexo搭建免费静态Blog&lt;/a&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&quot;http://jdpaton.github.io/2012/11/05/setup-hexo/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Setting up a Github Pages blog with Hexo&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;建立好基础的架构只是第一步，下面需要找到自己心仪主题，否则千篇一律的blog总归是很难让人赏心悦目的，主题可以在官方给出的参考里面去找.&lt;br&gt;&lt;a href=&quot;https://hexo.io/themes/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网主题列表&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;我在万般纠结之后选择了这个主题: &lt;a href=&quot;https://github.com/tufu9441/maupassant-hexo&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;maupassant-hexo&lt;/a&gt;，总体上还是很满意的，不过后来测试发了篇文章，发现了两个问题：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不支持数学公式显示&lt;/li&gt;
&lt;li&gt;引用的样式不喜欢&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;虽然我可能几百年也用不了一次数学公式显示，而引用的使用机会也不是很高，但是知道了问题的存在而不去解决实在是太让人难受了，于是去翻了下主题的代码，发现用到了jade和sass，这两个都是我之前没有接触过的技术（不得不感叹前端技术日新月异啊）。但是问题还是要解决的，下面简单记录下两个问题的解决过程，希望能帮到有需要的人。&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;不支持数学公式显示&lt;ol&gt;
&lt;li&gt;网上搜索得到的方案是使用mathjax，在网上找了一段js代码研究jade的语法终于正确嵌入后，像&lt;a href=&quot;http://hujiaweibujidao.github.io/blog/2014/04/15/flying-on-mac/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这样&lt;/a&gt;，发现在显示的时候末尾会有一个小竖线，如前面链接里面显示的，看着非常难受。&lt;/li&gt;
&lt;li&gt;为了解决小竖线的问题，看是看mathjax的&lt;a href=&quot;https://www.mathjax.org/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;官网&lt;/a&gt;，发现虽然他们官网的例子里面是没有小竖线的，但是翻他们官网的页面源码，把mathjax的相关配置抄过来之后，发现在我的博客上显示还是有问题，遂放弃。&lt;/li&gt;
&lt;li&gt;后来想到在Cmd Markdown和StackEdit上面数学公式渲染后都是没有小竖线的，于是从Cmd Markdown的页面里面借鉴了相关mathjax的配置，问题解决，相关修改可以参考&lt;a href=&quot;https://github.com/tiany/maupassant-hexo/commit/fd8319fbf9a5f0936ad3348132e41d5c2d5a8215&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;li&gt;引用的样式不喜欢&lt;ol&gt;
&lt;li&gt;可能是习惯了markdown那样的用一条小竖线来表示引用，对于这个主题里面用一个很大的双引号来表示引用实在无法喜欢起来，显示找到源码中关于blockquote的相关css配置，修改后发现左边会很宽。&lt;/li&gt;
&lt;li&gt;用chrome的开发工具调试后发现是由于浏览器自带的css属性没有reset导致的，后来把相关的属性重写后就好了(blockquote的margin-left属性，chrome下默认是40px），最终的修改参考&lt;a href=&quot;https://github.com/tiany/maupassant-hexo/commit/c3453553343a9072425350c1d13bdef1fd2c18ef&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;这里&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;两个修改后，这个主题基本符合我的需求了，修改后的效果如下：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;&lt;p&gt;数学公式&lt;br&gt;$$ E = mc^2 $$&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;引用样式&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt;这是一段引用&lt;/p&gt;
&lt;/blockquote&gt;
&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;第一篇博文，就写到这里吧，希望能够坚持下来。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;想写技术博客的时间其实有很久了，但是一直都没有实施起来过，怎么说呢，拖延症确实还是太严重了，希望这次会是一个好的开始，目前的计划是每月保证一更，希望能坚持下来。&lt;/p&gt;
&lt;p&gt;把技术博客从wp迁移到github pages了，一个主要的原因是我开始喜欢上Markdown这样
    
    </summary>
    
      <category term="tech" scheme="http://t.tiany.me/categories/tech/"/>
    
    
      <category term="hexo" scheme="http://t.tiany.me/tags/hexo/"/>
    
      <category term="mathjax" scheme="http://t.tiany.me/tags/mathjax/"/>
    
  </entry>
  
</feed>
